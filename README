<h2>Welcome to Devise_Base</h2>

<p>
This project is a Rails 3 starter app that includes Devise as its authentication solution. I chose Devise as my authentication solution for the following reasons:
</p>
<ul>
  <li>It is a very complete authentication solution providing user authentication, token authentication, email confirmation, password recovery, user registration, user session timeout, basic email and password validation, account locking, user statistics tracking, and remember user functionality.</li>
  <li>It is modular and allows you to pick and chose the features you want to use.<li>
  <li>It provides a fair number of options to customize its behavior including the ability to work with multiple authenticatable models, override the default routes, and override the default views.<li>
  <li>It is compatible with the Rails 3 architecture.<li>
  <li>Supports internationalization.<li>
</ul>
<p>
For more information on Devise see their github page at http://github.com/plataformatec/devise.
</p>
<p>
The app is setup in a fairly common configuration with a single User model and all Devise modules in use. The login using an email address with no username, which can easily be changed. Devise's default views are overridden to provide for a more finished look. The views are also rewritten using HAML 3, SASS, and the 960 grid system. The default database config uses SQLite 3. The project is setup to use Cucumber and RSpec 2 for the testing frameworks. Cucumber features are provided that test many of Devise's features being used in the app.
</p>

<h2>Installation</h2>
<p>
Devise_Base is only compatible with Rails 3. Checkout Devise_Base project with
</p>
<pre>
  git clone git@github.com:swanjr/devise_base.git
  cd devise_base
</pre>
<p>Once checked out, install the gems and setup the test database.</p>
<pre>
  bundle install
  rake db:create:all
  rake db:schema:load
  rake db:test:prepare
</pre>
<p>
 Once the initial setup is done, run the Cucumber tests to verify everything is passing as expected.
</p>
<pre>
  cucumber -P
</pre>
<p>
 The project should be ready to use now, for the most part. When you rename your project, however, be sure to rename the module name in all of the configuration files as well. By default the module is called 'DeviseBase'. DeviseBase is referenced in the following files:</p>
<ul>
  <li>application.rb</li>
  <li>environment.rb</li>
  <li>development.rb</li>
  <li>production.rb</li>
  <li>test.rb</li>
  <li>rspec_generator.rb</li>
  <li>routes.rb</li>
  <li>config.rb</li>
</ul>






